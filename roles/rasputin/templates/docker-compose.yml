---
version: '3'
services:
  pihole:
    image: pihole/pihole:latest
    hostname: rasputin
    environment:
      TZ: Europe/Zurich
      WEBPASSWORD: '{{ rasputin_pihole_webpassword }}'
      DNS1: '{{ rasputin_pihole_upstream_dns1 }}'
      DNS2: '{{ rasputin_pihole_upstream_dns2 }}'
      ServerIP: '{{ ansible_default_ipv4.address }}'
      VIRTUAL_HOST: 'pihole.{{ rasputin_domain }}'
    dns:
      - 127.0.0.1
      - '{{ rasputin_pihole_upstream_dns1 }}'
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - '127.0.0.1:3000:80/tcp'
    volumes:
      - '{{ rasputin_pihole_root }}/etc-pihole:/etc/pihole'
      - '{{ rasputin_pihole_root }}/etc-dnsmasq.d:/etc/dnsmasq.d'
    restart: unless-stopped

  registry:
    image: registry:2
    volumes:
      - '{{ rasputin_cfg_root }}/registry.yml:/etc/docker/registry/config.yml:ro'
      - '{{ rasputin_registry_root }}:/registry'
    ports:
      - '127.0.0.1:5000:5000/tcp'
    restart: unless-stopped

  transmission:
    image: ghcr.io/linuxserver/transmission:latest
    environment:
      USER: '{{ rasputin_transmission_username }}'
      PASS: '{{ rasputin_transmission_password }}'
      PUID: '1000'
      PGID: '1000'
      TZ: Europe/Zurich
    volumes:
      - '{{ rasputin_data_root }}/transmission:/config'
      - '{{ rasputin_data_root }}/media:/downloads'
      - '{{ rasputin_data_root }}/torrents:/watch'
    ports:
      - '51413:51413/tcp'
      - '51413:51413/udp'
      - '127.0.0.1:9091:9091/tcp'
    restart: unless-stopped

  plex:
    image: ghcr.io/linuxserver/plex:latest
    network_mode: host
    environment:
      PUID: '1000'
      PGID: '1000'
      VERSION: docker
    volumes:
      - '{{ rasputin_data_root }}/plex:/config'
      - '{{ rasputin_data_root }}/media:/media'
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ACCESS_KEY: '{{ rasputin_minio_access_key }}'
      MINIO_SECRET_KEY: '{{ rasputin_minio_secret_key }}'
    command:
      - server
      - /data
    ports:
      - 127.0.0.1:9000:9000/tcp
    volumes:
      - '{{ rasputin_minio_root }}:/data'
    restart: unless-stopped

  vaultwarden:
    image: vaultwarden/server:latest
    environment:
      DOMAIN: 'https://vaultwarden.{{ rasputin_domain }}'
      ADMIN_TOKEN: '{{ rasputin_vaultwarden_admin_token }}'
      HIBP_API_KEY: '{{ rasputin_vaultwarden_hibp_api_key }}'
      SMTP_FROM: '{{ rasputin_vaultwarden_smtp_from }}'
      SMTP_HOST: '{{ rasputin_vaultwarden_smtp_host }}'
      SMTP_PORT: '587'
      SMTP_SSL: 'true'
      SMTP_USERNAME: '{{ rasputin_vaultwarden_smtp_username }}'
      SMTP_PASSWORD: '{{ rasputin_vaultwarden_smtp_password }}'
      WEBSOCKET_ENABLED: 'true' # Enable WebSocket notifications.
    ports:
      - 127.0.0.1:4000:80/tcp
      - 127.0.0.1:4012:3012/tcp
    volumes:
      - '{{ rasputin_vaultwarden_root }}:/data'
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower:latest
    environment:
      WATCHTOWER_CLEANUP: 'true'
      WATCHTOWER_POLL_INTERVAL: '3600'
      WATCHTOWER_NOTIFICATIONS: slack
      WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL: '{{ rasputin_watchtower_slack_url }}'
      WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER: watchtower-rasputin
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
