---
- name: Check prometheus existence
  ansible.builtin.stat:
    path: "/usr/local/bin/prometheus.{{ prometheus_version }}"
  register: r_stat_prometheus

- when: not r_stat_prometheus.stat.exists
  block:
    - name: Download Prometheus
      ansible.builtin.get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/{{ prometheus_version }}/{{ prometheus_archive }}"
        dest: "/tmp/{{ prometheus_archive }}"
        checksum: "sha256:https://github.com/prometheus/prometheus/releases/download/{{ prometheus_version }}/sha256sums.txt"
        owner: root
        group: root
        mode: "0600"

    - name: Unpack Prometheus
      ansible.builtin.unarchive:
        remote_src: true
        src: "/tmp/{{ prometheus_archive }}"
        dest: /tmp
        creates: "/tmp/prometheus-{{ prometheus_version_no_v }}.linux-armv7/prometheus"

    - name: Move prometheus binary
      ansible.builtin.copy:
        remote_src: true
        src: "/tmp/prometheus-{{ prometheus_version_no_v }}.linux-armv7/prometheus"
        dest: "/usr/local/bin/prometheus.{{ prometheus_version }}"
        owner: root
        group: root
        mode: "0755"

- name: Check node_exporter existence
  ansible.builtin.stat:
    path: "/usr/local/bin/node_exporter.{{ node_exporter_version }}"
  register: r_stat_node_exporter

- when: not r_stat_node_exporter.stat.exists
  block:
    - name: Download node_exporter
      ansible.builtin.get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/{{ node_exporter_version }}/{{ node_exporter_archive }}"
        dest: "/tmp/{{ node_exporter_archive }}"
        checksum: "sha256:https://github.com/prometheus/node_exporter/releases/download/{{ node_exporter_version }}/sha256sums.txt"
        owner: root
        group: root
        mode: "0600"

    - name: Unpack node_exporter
      ansible.builtin.unarchive:
        remote_src: true
        src: "/tmp/{{ node_exporter_archive }}"
        dest: /tmp
        creates: "/tmp/node_exporter-{{ node_exporter_version_no_v }}.linux-armv7/node_exporter"

    - name: Move node_exporter binary
      ansible.builtin.copy:
        remote_src: true
        src: "/tmp/node_exporter-{{ node_exporter_version_no_v }}.linux-armv7/node_exporter"
        dest: "/usr/local/bin/node_exporter.{{ node_exporter_version }}"
        owner: root
        group: root
        mode: "0755"

- name: Link Prometheus binary
  ansible.builtin.file:
    src: "/usr/local/bin/prometheus.{{ prometheus_version }}"
    dest: /usr/local/bin/prometheus
    state: link
  notify:
    - restart prometheus

- name: Prepare /etc/systemd/system/prometheus.service
  ansible.builtin.template:
    src: templates/prometheus.service
    dest: /etc/systemd/system/prometheus.service
  notify:
    - restart prometheus

- name: Prepare prometheus config
  ansible.builtin.template:
    src: templates/prometheus.yml
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
  notify:
    - restart prometheus

- name: Enable and start Prometheus
  ansible.builtin.systemd:
    name: prometheus
    state: started
    enabled: true
    masked: false

- name: Link node_exporter binary
  ansible.builtin.file:
    src: "/usr/local/bin/node_exporter.{{ node_exporter_version }}"
    dest: /usr/local/bin/node_exporter
    state: link
  notify:
    - restart node_exporter

- name: Prepare /etc/systemd/system/node_exporter.service
  ansible.builtin.template:
    src: templates/node_exporter.service
    dest: /etc/systemd/system/node_exporter.service
  notify:
    - restart node_exporter

- name: Enable and start node_exporter
  ansible.builtin.systemd:
    name: node_exporter
    state: started
    enabled: true
    masked: false

- name: Clean up download artifacts
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/tmp/{{ prometheus_archive }}"
    - "/tmp/prometheus-{{ prometheus_version_no_v }}.linux-armv7"
    - "/tmp/{{ node_exporter_archive }}"
    - "/tmp/node_exporter-{{ node_exporter_version_no_v }}.linux-armv7"
